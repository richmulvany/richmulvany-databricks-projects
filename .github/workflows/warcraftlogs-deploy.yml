name: Deploy and Run WarcraftLogs Job

on:
  workflow_dispatch:
    inputs:
      report_id:
        description: "Optional: report_id to pass to job"
        required: false
        default: "rVnDB4fcb9qZAPLv"

jobs:
  deploy-and-run:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v3

      - name: üõ†Ô∏è Install Databricks CLI
        uses: databricks/setup-cli@main
        
      - name: üìÑ Copy DAB YAML
        run: cp warcraftlogs-raid-analysis/databricks.yml.template warcraftlogs-raid-analysis/databricks.yml

      - name: üßπ Copy only deployable files to deploy-dir
        run: |
          mkdir deploy-dir
          cp warcraftlogs-raid-analysis/databricks.yml deploy-dir/
          cp -r warcraftlogs-raid-analysis/notebooks deploy-dir/ || true
          cp -r warcraftlogs-raid-analysis/jobs deploy-dir/ || true
          cp -r warcraftlogs-raid-analysis/utils deploy-dir/ || true
          cp -r warcraftlogs-raid-analysis/dashboards deploy-dir/ || true
          
      - name: ‚úÖ Validate DAB Bundle
        working-directory: deploy-dir
        run: databricks bundle validate
          
      - name: üß™ Echo CLI invocation
        run: |
          echo "Running with report_id=${{ github.event.inputs.report_id }}"
          echo "Command: databricks bundle run bronze-ingestion-extraction-job --refresh-all -p report_id=${{ github.event.inputs.report_id }}"
          
      - name: üöÄ Deploy and Run Asset Bundle
        working-directory: deploy-dir
        run: |
          databricks bundle deploy --force-lock
          databricks bundle run bronze-ingestion-extraction-job --refresh-all -p report_id=${{ github.event.inputs.report_id }}
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST_ADDRESS }}
          DATABRICKS_BUNDLE_ENV: default



