name: Databricks Bundle CI
 
on:
  workflow_dispatch:
    inputs:
      job_to_run:
        description: 'Which operation do you want to perform?'
        required: true
        default: 'deploy-only'
        options:
          - deploy-only
          - run-bronze
          - pause-bronze
      report_ids:
        description: 'JSON array of report IDs (only for run-bronze)'
        required: false
        default: '[]'
      bronze_job_name:
        description: 'Name of the bronze ingestion job to pause (only for pause-bronze)'
        required: false
        default: 'bronze-ingestion-extraction-job'
 
env:
  DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
  DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
 
jobs:
 
  # ─────────────────────────────────────────────────────────────
  deploy-only:
    name: ✅ Validate & Deploy Bundle
    if: ${{ inputs.job_to_run == 'deploy-only' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
 
      - name: 🛠️ Install & configure Databricks CLI
        uses: databricks/setup-cli@main
        with:
          host: ${{ env.DATABRICKS_HOST }}
          token: ${{ env.DATABRICKS_TOKEN }}
 
      - name: 🔍 Validate bundle
        working-directory: warcraftlogs-raid-analysis
        run: databricks bundle validate
 
      - name: 🚀 Deploy bundle
        working-directory: warcraftlogs-raid-analysis
        run: databricks bundle deploy --force-lock
 
  # ─────────────────────────────────────────────────────────────
  run-bronze:
    name: 🔁 Deploy (if needed) & Run Bronze
    if: ${{ inputs.job_to_run == 'run-bronze' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
 
      - name: 🛠️ Install & configure Databricks CLI
        uses: databricks/setup-cli@main
        with:
          host: ${{ env.DATABRICKS_HOST }}
          token: ${{ env.DATABRICKS_TOKEN }}
 
      - name: ✅ Validate & 🚀 Deploy Bundle
        working-directory: warcraftlogs-raid-analysis
        run: |
          databricks bundle validate
          databricks bundle deploy --force-lock
 
      - name: ▶️ Run Bronze Ingestion
        working-directory: warcraftlogs-raid-analysis
        run: |
          echo "Incoming report IDs: ${{ inputs.report_ids }}"
          for id in $(echo '${{ inputs.report_ids }}' | jq -r '.[]'); do
            echo " • Running bronze job for $id"
            databricks bundle run bronze-ingestion-extraction-job \
              --refresh-all \
              --params report_id=$id
          done
 
  # ─────────────────────────────────────────────────────────────
  pause-bronze:
    name: ⏸️ Pause Bronze Job
    if: ${{ inputs.job_to_run == 'pause-bronze' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
 
      - name: 🛠️ Install & configure Databricks CLI
        uses: databricks/setup-cli@main
        with:
          host: ${{ env.DATABRICKS_HOST }}
          token: ${{ env.DATABRICKS_TOKEN }}
 
      - name: 🔎 Look up job ID
        id: lookup
        run: |
          JOB_ID=$(databricks jobs list --name "${{ inputs.bronze_job_name }}" --output json \
            | jq -r '.[0].job_id')
          echo "::set-output name=job_id::$JOB_ID"
 
      - name: ⏸️ Pause schedule
        run: |
          echo "Pausing job ${{ steps.lookup.outputs.job_id }}"
          databricks jobs update --json '{
            "job_id": '${{ steps.lookup.outputs.job_id }}',
            "new_settings": {
              "schedule": { "pause_status": "PAUSED" }
            }
          }'
